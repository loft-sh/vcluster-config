{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://vcluster.com/schemas/platform-config",
  "$defs": {
    "AutoDelete": {
      "properties": {
        "afterInactivity": {
          "type": "integer",
          "description": "AfterInactivity specifies after how many seconds of inactivity the virtual cluster be deleted\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "AutoSleep": {
      "properties": {
        "afterInactivity": {
          "type": "integer",
          "description": "AfterInactivity specifies after how many seconds of inactivity the virtual cluster should sleep\n+optional"
        },
        "schedule": {
          "type": "string",
          "description": "Schedule specifies scheduled virtual cluster sleep in Cron format, see https://en.wikipedia.org/wiki/Cron.\nNote: timezone defined in the schedule string will be ignored. Use \".Timezone\" field instead.\n+optional"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone specifies time zone used for scheduled virtual cluster operations. Defaults to UTC.\nAccepts the same format as time.LoadLocation() in Go (https://pkg.go.dev/time#LoadLocation).\nThe value should be a location name corresponding to a file in the IANA Time Zone database, such as \"America/New_York\".\n+optional"
        },
        "autoWakeup": {
          "$ref": "#/$defs/AutoWakeup",
          "description": "AutoSleep holds configuration for automatic wakeup\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "AutoSnapshot": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable defines whether auto snapshot is enabled for the virtual cluster\n+optional"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone specifies time zone used for scheduled virtual cluster operations. Defaults to UTC.\nAccepts the same format as time.LoadLocation() in Go (https://pkg.go.dev/time#LoadLocation).\nThe value should be a location name corresponding to a file in the IANA Time Zone database, such as \"America/New_York\".\n+optional"
        },
        "schedule": {
          "type": "string",
          "description": "Schedule specifies a scheduled time in Cron format, see https://en.wikipedia.org/wiki/Cron for a virtual cluster snapshot to be taken\n+optional"
        },
        "storage": {
          "$ref": "#/$defs/ScheduledSnapshotStorage",
          "description": "Storage specifies a set of configuration where the snapshot will be stored\n+optional"
        },
        "retention": {
          "$ref": "#/$defs/SnapshotRetention",
          "description": "Retention specifies a set of configuration for how long the snapshot will be kept\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "AutoWakeup": {
      "properties": {
        "schedule": {
          "type": "string",
          "description": "Schedule specifies scheduled wakeup from sleep in Cron format, see https://en.wikipedia.org/wiki/Cron.\nNote: timezone defined in the schedule string will be ignored. The timezone for the autoSleep schedule will be\nused\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ContainerStorage": {
      "properties": {
        "path": {
          "type": "string",
          "description": "Path specifies directory to store the snapshot\n+optional"
        },
        "volume": {
          "$ref": "#/$defs/ContainerStorageVolume",
          "description": "Volume specifies which volume needs to be mounted into the conteiner to store the snapshot\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ContainerStorageVolume": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name to be used to mount the volume\n+optional"
        },
        "path": {
          "type": "string",
          "description": "Path to the volume mount\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "OCIStorage": {
      "properties": {
        "repository": {
          "type": "string",
          "description": "Repository OCI repository to store the snapshot\n+optional"
        },
        "credential": {
          "$ref": "#/$defs/SnapshotSecretCredential",
          "description": "Credential secret with the OCI Credentials\n+optional"
        },
        "username": {
          "type": "string",
          "description": "Username to authenticate with the OCI registry\n+optional"
        },
        "password": {
          "type": "string",
          "description": "Password to authenticate with the OCI registry\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "S3Storage": {
      "properties": {
        "url": {
          "type": "string",
          "description": "Url specifies url to the storage service\n+optional"
        },
        "credential": {
          "$ref": "#/$defs/SnapshotSecretCredential",
          "description": "Credential secret with the S3 Credentials, it should contain AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "ScheduledSnapshotStorage": {
      "properties": {
        "type": {
          "type": "string",
          "description": "Type specifies supported type of storage services for a snapshot S3/OCI/Container, see https://www.vcluster.com/docs/vcluster/manage/backup-restore#store-snapshots-in-s3-buckets\n+optional"
        },
        "s3": {
          "$ref": "#/$defs/S3Storage",
          "description": "S3 holds configuration for storing snapshots in S3-compatible bucket\n+optional"
        },
        "oci": {
          "$ref": "#/$defs/OCIStorage",
          "description": "OCI holds configuration for storing snapshots in OCI image registries\n+optional"
        },
        "container": {
          "$ref": "#/$defs/ContainerStorage",
          "description": "Container holds configuration for storing snapshots as local files inside a vCluster container\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SnapshotRetention": {
      "properties": {
        "period": {
          "type": "integer",
          "description": "Period defines the number of days a snapshot will be kept\n+optional"
        },
        "maxSnapshots": {
          "type": "integer",
          "description": "MaxSnapshots defines the number of snapshot can be taken\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    },
    "SnapshotSecretCredential": {
      "properties": {
        "secretName": {
          "type": "string",
          "description": "Name secret name with credential\n+optional"
        },
        "secretNamespace": {
          "type": "string",
          "description": "Name secret namespace with credential\n+optional"
        }
      },
      "additionalProperties": false,
      "type": "object"
    }
  },
  "properties": {
    "autoSleep": {
      "$ref": "#/$defs/AutoSleep",
      "description": "AutoSleep holds configuration for automatic sleep and wakeup\n+optional"
    },
    "autoDelete": {
      "$ref": "#/$defs/AutoDelete",
      "description": "AutoDelete holds configuration for automatic delete\n+optional"
    },
    "project": {
      "type": "string",
      "description": "Project holds project name where vcluster should be imported"
    },
    "autoSnapshot": {
      "$ref": "#/$defs/AutoSnapshot",
      "description": "AutoSnapshot holds configuration for automatic snapshot of vclusters\nNote: This feature is currently in beta.\n+optional"
    }
  },
  "additionalProperties": false,
  "type": "object",
  "description": "PlatformConfig describes platform configuration for a vCluster."
}